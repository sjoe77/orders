<!DOCTYPE html>
<html>
  <head>
    <title><%= content_for(:title) || "Orders" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= yield :head %>

    <%# Enable PWA manifest for installable apps (make sure to enable in config/routes.rb too!) %>
    <%#= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">

    <%# Includes all stylesheet files in app/assets/stylesheets %>
    <%= stylesheet_link_tag :app, "data-turbo-track": "reload" %>
    <%# Bootstrap 5.3+ CSS %>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <%# Bootstrap Icons %>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    
    <%= javascript_importmap_tags %>
    <%# Bootstrap 5.3+ JS Bundle %>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    
    <%# Browser compatibility check %>
    <script>
      if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
        console.warn('Safari detected - some features may not work optimally. Consider using Chrome, Firefox, or Edge for the best experience.');
      }
    </script>
    
    <!-- Fallback script for drawer if Stimulus fails to load -->
    <script>
      document.addEventListener('turbo:load', function() {
        const drawer = document.querySelector('[data-app-shell-target="drawer"]');
        const content = document.querySelector('[data-app-shell-target="content"]');
        const toggleButton = document.querySelector('button[data-action*="toggleDrawer"]');
        
        // Initialize drawer state from localStorage
        const storedState = localStorage.getItem('drawerOpen');
        let isDrawerOpen = storedState === 'true';
        
        // Initialize drawer based on current state
        function initializeDrawer() {
          if (drawer && content) {
            if (isDrawerOpen) {
              drawer.style.transform = 'translateX(0)';
              if (window.innerWidth > 768) {
                content.style.marginLeft = '320px';
              }
            } else {
              drawer.style.transform = 'translateX(-100%)';
              content.style.marginLeft = '0px';
            }
          }
        }
        
        // Toggle drawer function
        function toggleDrawer() {
          if (!drawer || !content) return;
          
          isDrawerOpen = !isDrawerOpen;
          
          if (isDrawerOpen) {
            drawer.style.transform = 'translateX(0)';
            if (window.innerWidth > 768) {
              content.style.marginLeft = '320px';
            }
            localStorage.setItem('drawerOpen', 'true');
          } else {
            drawer.style.transform = 'translateX(-100%)';
            content.style.marginLeft = '0px';
            localStorage.setItem('drawerOpen', 'false');
          }
        }
        
        // Check if Stimulus connects, if not, add our own event listeners
        setTimeout(function() {
          if (!window.stimulusConnected) {
            console.log('Stimulus not loaded, using fallback controls');
            
            initializeDrawer();
            
            if (toggleButton) {
              toggleButton.addEventListener('click', function(e) {
                e.preventDefault();
                toggleDrawer();
              });
            }
            
            document.addEventListener('keydown', function(e) {
              if (e.key === 'Escape' && isDrawerOpen) {
                toggleDrawer();
              }
            });
            
            const navLinks = document.querySelectorAll('[data-action*="navigateAndClose"]');
            navLinks.forEach(link => {
              link.addEventListener('click', function() {
                if (window.innerWidth <= 768 && isDrawerOpen) {
                  setTimeout(() => toggleDrawer(), 100);
                }
              });
            });
          }
        }, 200);
      });
    </script>
  </head>

  <body data-turbo="true">
    <%= render AppShellComponent.new do |shell| %>
      <% shell.with_header do %>
        <%= render HeaderComponent.new(title: "Orders") do |header| %>
          <% header.with_actions do %>
            <!-- User Avatar -->
            <button class="navbar-text border-0 bg-transparent text-white p-2 me-1"
                    style="border: none !important; background: none !important;">
              <i class="bi bi-person-circle fs-5"></i>
            </button>

            <!-- Theme Toggle -->
            <button class="navbar-text border-0 bg-transparent text-white p-2 me-1"
                    style="border: none !important; background: none !important;"
                    data-action="click->app-shell#toggleTheme"
                    data-app-shell-target="themeToggle">
              <i class="bi bi-sun-fill fs-5"></i>
            </button>

            <!-- Logout -->
            <button class="navbar-text border-0 bg-transparent text-white p-2"
                    style="border: none !important; background: none !important;">
              <i class="bi bi-box-arrow-right fs-5"></i>
            </button>
          <% end %>
        <% end %>
      <% end %>

      <% shell.with_navigation do %>
        <%= render NavigationComponent.new %>
      <% end %>

      <% shell.with_main_content do %>
        <%= yield %>
      <% end %>
    <% end %>
  </body>
</html>
